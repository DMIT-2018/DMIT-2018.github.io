(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{171:function(t,s,a){t.exports=a.p+"assets/img/Waiters.3d3686f0.png"},259:function(t,s,a){t.exports=a.p+"assets/img/Nested-1.610b06e4.png"},260:function(t,s,a){t.exports=a.p+"assets/img/Anon-3.7f9b57ea.png"},261:function(t,s,a){t.exports=a.p+"assets/img/Anon-1.95794504.png"},262:function(t,s,a){t.exports=a.p+"assets/img/Anon-2.d8ba20cd.png"},263:function(t,s,a){t.exports=a.p+"assets/img/Combined-2.a612c417.png"},264:function(t,s,a){t.exports=a.p+"assets/img/Combined-1.bcb502b5.png"},265:function(t,s,a){t.exports=a.p+"assets/img/Grouping-3.84518c08.png"},266:function(t,s,a){t.exports=a.p+"assets/img/Grouping-2.853b5e18.png"},267:function(t,s,a){t.exports=a.p+"assets/img/Grouping-1.0bade2be.png"},268:function(t,s,a){t.exports=a.p+"assets/img/Orderby-4.3d5100d9.png"},269:function(t,s,a){t.exports=a.p+"assets/img/Orderby-3.f22bd7c5.png"},270:function(t,s,a){t.exports=a.p+"assets/img/Orderby-2.cdaac2e4.png"},271:function(t,s,a){t.exports=a.p+"assets/img/Orderby-1.600bcf8e.png"},272:function(t,s,a){t.exports=a.p+"assets/img/Where-3.323454ce.png"},273:function(t,s,a){t.exports=a.p+"assets/img/Where-2.1ad94230.png"},274:function(t,s,a){t.exports=a.p+"assets/img/Where-1.22638247.png"},373:function(t,s,a){"use strict";a.r(s);var n=[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"c-expression"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-expression","aria-hidden":"true"}},[t._v("#")]),t._v(" C# Expression")]),t._v(" "),n("p",[t._v("LinqPad expression queries return the results from evaluating the LINQ query.")]),t._v(" "),n("h2",{attrs:{id:"select-all"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#select-all","aria-hidden":"true"}},[t._v("#")]),t._v(" Select All")]),t._v(" "),n("p",[t._v("The simplest way to get all the rows of a table is to just reference the table. In this case, there is no LINQ being used at all.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[t._v("Waiters\n")])])]),n("p",[n("img",{attrs:{src:a(171),alt:"Waiters"}})]),t._v(" "),n("p",[t._v("The equivalent code using LINQ to get all the rows looks like this.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" person "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Waiters")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" person\n")])])]),n("p",[t._v("If the above statement was written using method syntax, it would look like this.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[t._v("Waiters\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Select "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(171),alt:"Waiters"}})]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"simple-where-clause"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#simple-where-clause","aria-hidden":"true"}},[t._v("#")]),t._v(" Simple Where Clause")]),t._v(" "),n("p",[t._v("Results from a select can be filtered by using a where clause, as in this example that checks the value in a given column.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" row "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Tables")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" row"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Capacity "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" row\n")])])]),n("p",[t._v("This is also a good time to check out the output window on LinqPad to compare the "),n("em",[t._v("Results")]),t._v(", "),n("em",[t._v("λ (method syntax)")]),t._v(" and "),n("em",[t._v("SQL")]),t._v(" for the LINQ expression entered.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method syntax")]),t._v("\nTables\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("row "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("row"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Capacity "),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token number"}},[t._v("3")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Remember that in this sample, "),n("code",[t._v("row")]),t._v(" is mearly a variable name; we could have named it anything we wanted. Also remember that the table called "),n("code",[t._v("Tables")]),t._v(" holds data about physical tables in the restaurant.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(274),alt:"Where Results 1"}})]),t._v(" "),n("p",[t._v("Observe that the header of the results identifies the data type of the collection: "),n("code",[t._v("IOrderedQueryable<Table>")]),t._v(". Depending on the code you write in the LinqPad editor, the results could be a generic kind that is evaluated by generating SQL (one of the "),n("code",[t._v("IQueryable")]),t._v(" types) or producing an in-memory result ("),n("code",[t._v("IEnumerable")]),t._v(") or even a strongly-typed result (as in one of the examples on the bottom of the page). Also notice that in LinqPad, the Results window shows a column for the Bills and the Reservations. Clicking on those will bring up the bills & reservations that have been recorded on that table.")]),t._v(" "),n("p",[t._v('If you have experience in working with databases, you may be tempted to start "thinking in SQL", particularly when you see keywords such as '),n("code",[t._v("from")]),t._v(", "),n("code",[t._v("where")]),t._v(" and "),n("code",[t._v("select")]),t._v(". LINQ, however, is "),n("strong",[t._v("L")]),t._v("anguage "),n("strong",[t._v("IN")]),t._v("tegrated "),n("strong",[t._v("Q")]),t._v("ueries, meaning that the code you are writing is actually part of the C# (or VB) syntax. Keep that in mind, particularly as you look at writing the conditional expression in your "),n("code",[t._v("where")]),t._v(" clauses.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" booking "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Reservations")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" booking"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventCode"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("Equals")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"A"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" booking\n")])])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("Remember - LINQ is still C#, so expressing a boolean expression in the where clause is written as C# ("),n("em",[t._v("not SQL")]),t._v(").")])]),t._v(" "),n("p",[t._v("Notice that the method syntax makes uses of "),n("strong",[t._v("Lambda")]),t._v(" expressions. Lambdas are common when performing LINQ with the Method syntax.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[t._v("Reservations\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("booking "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" booking"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EventCode"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Equals "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token string"}},[t._v('"A"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"tip custom-block"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("Note that in this example, we are using the "),n("code",[t._v(".Equals()")]),t._v(" method of the string class, rather than the equal-to sign "),n("code",[t._v("==")]),t._v(". The reason for this is that the EventCode column can contain "),n("code",[t._v("NULL")]),t._v(" values. Using the "),n("code",[t._v(".Equals()")]),t._v(" avoids the problem of possible database "),n("code",[t._v("NULL")]),t._v(" values causing a run-time error. Whenever a string column states it can hold "),n("code",[t._v("NULL")]),t._v(" values, use the "),n("code",[t._v(".Equals()")]),t._v(" when comparing values in your where clause.")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(273),alt:"Where Result 2"}})]),t._v(" "),n("p",[t._v("Just to drive home the point, see this example that uses the C# "),n("code",[t._v("!")]),t._v(" operator. Also note that the column it is checking allows "),n("code",[t._v("NULL")]),t._v(" values, and in C# this is being represented as a "),n("strong",[t._v("nullable data type")]),t._v(".")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" booking "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Reservations")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("booking"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("EventCode"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HasValue")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" booking\n")])])]),n("p",[n("img",{attrs:{src:a(272),alt:"Where Results 3"}})]),t._v(" "),n("h3",{attrs:{id:"try-this"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#try-this","aria-hidden":"true"}},[t._v("#")]),t._v(" Try this")]),t._v(" "),n("ul",[n("li",[t._v("In the LinqPad example above, when you click on the Bills and Reservations, what does that tell you about the relationship between these and the Tables data?")])]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"simple-orderby"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#simple-orderby","aria-hidden":"true"}},[t._v("#")]),t._v(" Simple OrderBy")]),t._v(" "),n("p",[t._v("By default, sorting is done in ascending order.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("Description")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" food\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(271),alt:"Orderby example 1 as Method Syntax - Results"}})]),t._v(" "),n("p",[t._v("You can specify the descending and ascending order explicitly.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("CurrentPrice")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("descending")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" food\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderByDescending "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(270),alt:"Orderby example 2 as Method Syntax - Results"}})]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("Calories")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("ascending")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" food\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Calories"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(269),alt:"Orderby example 3 as Method Syntax - Results"}})]),t._v(" "),n("p",[t._v("You can sort by multiple columns.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("CurrentPrice")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("descending")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("Calories")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("ascending")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" food\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderByDescending "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ThenBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Calories"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(268),alt:"Orderby example 4 as Method Syntax - Results"}})]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"grouping"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#grouping","aria-hidden":"true"}},[t._v("#")]),t._v(" Grouping")]),t._v(" "),n("p",[t._v("Grouping can be used as a result in itself, without the "),n("code",[t._v("select")]),t._v(" clause. Grouping produces a result that has two parts: a Key value, and the grouped items.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("group")]),t._v(" food by food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategoryID\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GroupBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategoryID"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(267),alt:"Grouping example 1 as Method Syntax - Results"}})]),t._v(" "),n("p",[t._v("Like ordering, grouping can include more than one column. All you have to do is use an anonymous type for your grouping condition.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("group")]),t._v(" food by "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategoryID"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Notice the use of "),n("code",[t._v("new {food.MenuCategoryID, food.CurrentPrice}")]),t._v(". This is an example of "),n("strong",[t._v("anonymous types")]),t._v(" (used in the grouping clause). You will read more about anonymous types in the result set of the select later on.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GroupBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  \n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          MenuCategoryID "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategoryID"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          CurrentPrice "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice\n        "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(266),alt:"Grouping example 2 as Method Syntax - Results"}})]),t._v(" "),n("p",[t._v("A group can become something from which you can select your actual data. All you have to do is give a name to the resulting group.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("group")]),t._v(" food by food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("MenuCategoryID")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("into")]),t._v(" result\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" result\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GroupBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategoryID"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Select "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(265),alt:"Grouping example 3 as Method Syntax - Results"}})]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"combining-clauses"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#combining-clauses","aria-hidden":"true"}},[t._v("#")]),t._v(" Combining Clauses")]),t._v(" "),n("p",[t._v("Combining clauses is simple, and the order of the "),n("code",[t._v("where")]),t._v(" and "),n("code",[t._v("orderby")]),t._v(" clauses (relative to each other) is not important. These two examples give the same result.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("CurrentPrice")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("descending")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" food\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("CurrentPrice")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("descending")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" food\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderByDescending "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(264),alt:"Combined Clauses example 1 as Method Syntax - Results"}})]),t._v(" "),n("p",[t._v("This example gets the entrees and beverages, sorted by price and grouped by category.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Beverage"')]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("CurrentPrice")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("descending")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("group")]),t._v(" food by food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("MenuCategoryID")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("into")]),t._v(" result\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" result\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n            "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" \n               "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Beverage"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderByDescending "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GroupBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategoryID"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Select "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" result"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(263),alt:"Combined Clauses example 2 as Method Syntax - Results"}})]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"anonymous-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anonymous-types","aria-hidden":"true"}},[t._v("#")]),t._v(" Anonymous Types")]),t._v(" "),n("p",[t._v("All of the examples so far demonstrated selecting the complete set of results or entire table sets. Because C# supports the concept of Anonymous Types – a feature of C# that stands apart from LINQ itself – we can select only the data we want to see, as in these exampes.")]),t._v(" "),n("p",[t._v("To identify what data you want in your select, simply name properties in the initializer list and assign the values from your query's result set.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("Active")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("CurrentPrice")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("descending")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Description "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Price "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Calories "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Calories\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Active"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderByDescending "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Select "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n         "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  \n         "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Description "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Price "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            Calories "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Calories\n         "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(262),alt:"Anonymous type example 1 as Method Syntax - Results"}})]),t._v(" "),n("p",[t._v("Part of the power of selecting into another type (anonymous or otherwise) is the ability to perform calculations")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" person "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Waiters")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReleaseDate "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstName "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastName"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Phone "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Phone"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        DaysEmployed "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DateTime"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Today "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HireDate"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Days\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nWaiters\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ReleaseDate "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DateTime"),n("span",{attrs:{class:"token operator"}},[t._v("?")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Select "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      person "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n         "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  \n         "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Name "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FirstName "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('" "')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LastName"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            Phone "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Phone"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            DaysEmployed "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DateTime"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Today "),n("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v(" person"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HireDate"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Days\n         "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(261),alt:"Anonymous type example 2 as Method Syntax - Results"}})]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" food "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Beverage"')]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("CurrentPrice")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("descending")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("group")]),t._v(" food by food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("MenuCategory")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("into")]),t._v(" foodGroup\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Category "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" foodGroup"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Key"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    MenuItems "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" foodGroup"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token function"}},[t._v("ToList")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nItems\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n            "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" \n               "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Beverage"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderByDescending "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GroupBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("food "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" food"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MenuCategory"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Select "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      foodGroup "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n         "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  \n         "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Category "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" foodGroup"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Key"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            MenuItems "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" foodGroup"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ToList "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(260),alt:"Anonymous type example 3 as Method Syntax - Results"}})]),t._v(" "),n("hr"),t._v(" "),n("h2",{attrs:{id:"nested-queries"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nested-queries","aria-hidden":"true"}},[t._v("#")]),t._v(" Nested Queries")]),t._v(" "),n("p",[t._v("LINQ queries can be nested as well. When used together with navigation properties, it's possible to get very expressive results with straight-forward and readable queries.")]),t._v(" "),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" cat "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{attrs:{class:"token class-name"}},[t._v("MenuCategories")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Appetizer"')]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("Description")]),t._v("\n"),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Description "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  MenuItems "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("from")]),t._v(" item "),n("span",{attrs:{class:"token keyword"}},[t._v("in")]),t._v(" cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("Items")]),t._v("\n              "),n("span",{attrs:{class:"token keyword"}},[t._v("where")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("Active")]),t._v("\n              "),n("span",{attrs:{class:"token keyword"}},[t._v("orderby")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{attrs:{class:"token class-name"}},[t._v("Description")]),t._v("\n              "),n("span",{attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("\n              "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                Description "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                Price "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                Calories "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Calories"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                Comment "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Comment\n              "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{attrs:{class:"token comment"}},[t._v("// λ - Method Syntax")]),t._v("\nMenuCategories\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cat "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Appetizer"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description "),n("span",{attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v('"Entree"')]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cat "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Select "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      cat "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n         "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  \n         "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            Description "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n            MenuItems "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" cat"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Items"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Where "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Active"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OrderBy "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n               "),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Select "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                  item "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),n("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n                     "),n("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v("  \n                     "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        Description "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Description"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                        Price "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CurrentPrice"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                        Calories "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Calories"),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                        Comment "),n("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" item"),n("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Comment\n                     "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n               "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n         "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(259),alt:"Nested example 1 as Method Syntax - Results"}})])])}],e=a(0),o=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},n,!1,null,null,null);s.default=o.exports}}]);