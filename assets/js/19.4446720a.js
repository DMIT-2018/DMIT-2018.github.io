(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{280:function(e,t,r){e.exports=r.p+"assets/img/illustrated-lambda.410d6bc6.png"},281:function(e,t,r){e.exports=r.p+"assets/img/expand-lambda.f2fa24a8.png"},486:function(e,t,r){"use strict";r.r(t);var a=r(24),n=Object(a.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"linq-lambdas-and-delegates"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linq-lambdas-and-delegates","aria-hidden":"true"}},[e._v("#")]),e._v(" LINQ - Lambdas and Delegates")]),e._v(" "),a("p",[e._v("C# supports the concept of "),a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/900fyy8e.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("delegates"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("blockquote",[a("p",[e._v("A "),a("strong",[e._v("delegate")]),e._v(" is a reference type that can be used to encapsulate a named or an anonymous method. Delegates are similar to function pointers in C++; however, delegates are type-safe and secure. For applications of delegates, see "),a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/ms173171.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Delegates"),a("OutboundLink")],1),e._v(" and "),a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/sx2bwtw7.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Generic Delegates"),a("OutboundLink")],1),e._v(".\n"),a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/900fyy8e.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://msdn.microsoft.com/en-us/library/900fyy8e.aspx"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("=>")]),e._v(" operator is known as the "),a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/bb311046.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lambda Operator"),a("OutboundLink")],1),e._v(" in C#.")]),e._v(" "),a("p",[e._v("Delegates allow methods to be passed to other methods, effectively creating callback functionality. In other words, one of the parameters for a method can be a delegate. Combined with the ability to create "),a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/0yw3tz5k.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("anonymous methods"),a("OutboundLink")],1),e._v(", delegates form an important basis for what are known as "),a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/bb397687.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lambda Expressions"),a("OutboundLink")],1),e._v(". The method syntax of LINQ makes heavy use of lambda expressions.")]),e._v(" "),a("p",[e._v("Review the information in the following resources:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://www.codeproject.com/Tips/298963/Understand-Lambda-Expressions-in-minutes",target:"_blank",rel:"noopener noreferrer"}},[e._v("Understand Lambda Expressions in 3 minutes"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/bb397687.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Lambda Expressions"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/ms173171.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Delegates (C# Programming Guide)"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/ms173172.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using Delegates (C# Programming Guide)"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://msdn.microsoft.com/en-us/library/ms173176.aspx",target:"_blank",rel:"noopener noreferrer"}},[e._v("How to: Declare, Instantiate, and Use a Delegate (C# Programming Guide)"),a("OutboundLink")],1)])]),e._v(" "),a("p",[a("img",{attrs:{src:r(281),alt:"Lambda as an Anonymous Delegate"}})]),e._v(" "),a("p",[e._v('In the following LinqPad illustration, a Lambda is compared to a delegate. With the Lambda, the data types for the delegate\'s parameters and return type are inferred from the "body" of the Lambda and the type of object in the collection that the '),a("code",[e._v("Max")]),e._v(" method is coded on.")]),e._v(" "),a("p",[a("img",{attrs:{src:r(280),alt:"Illustrated Lambda"}})])])},[],!1,null,null,null);t.default=n.exports}}]);